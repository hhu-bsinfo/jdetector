import com.cisco.gradle.externalbuild.ExternalNativeLibrarySpec
import com.cisco.gradle.externalbuild.tasks.CMake

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.cisco.external-build' version '1.14'
    id 'com.jfrog.bintray' version '1.8.4'
    id "com.jfrog.artifactory" version "4.7.5"
}

group = 'de.hhu.bsinfo'
version version = '0.1.0' + (Boolean.valueOf(System.getProperty('release')) ? '' : '-SNAPSHOT')

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()

    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

model {
    components {
        IbPerfLibJNI(ExternalNativeLibrarySpec) {
            buildConfig(CMake) {
                cmakeRoot '.'
                targets 'all'

                inputs.file 'CMakeLists.txt'
                
                workingDir 'build'
                
                environment = [
                        'PATH': toolChainPath
                ]
            }
        }
    }
}

compileJava.dependsOn "IbPerfLibJNISharedLibrary"

jar {
    doFirst {
        println "\nCMake output:"
        new File('build/tmp/externalBuildIbPerfLibJNISharedLibrary/cmake-output.txt').eachLine { line ->
            println line
        }

        println "\nMake output:"
        new File('build/tmp/externalBuildIbPerfLibJNISharedLibrary/makeAll-output.txt').eachLine { line ->
            println line
        }
    }

    from('build/libs/') {
        include 'libIbPerfLibJNI.so'
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

apply from: 'publish.gradle'
apply from: 'bintray.gradle'
apply from: 'artifactory.gradle'
