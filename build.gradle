import com.cisco.gradle.externalbuild.ExternalNativeLibrarySpec
import com.cisco.gradle.externalbuild.tasks.CMake

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.cisco.external-build' version '1.14'
    id 'com.jfrog.bintray' version '1.8.4'
    id "com.jfrog.artifactory" version "4.7.5"
    id 'de.fuerstenau.buildconfig' version '1.1.8'
    id 'com.palantir.git-version' version '0.11.0'
}

group = 'de.hhu.bsinfo'
version version = '0.1.0' + (Boolean.valueOf(System.getProperty('release')) ? '' : '-SNAPSHOT')

repositories {
    mavenCentral()
    jcenter()

    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

compileJava {
    sourceCompatibility = '11'
    targetCompatibility = '11'
    options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

model {
    components {
        detectorJNI(ExternalNativeLibrarySpec) {
            buildConfig(CMake) {
                cmakeRoot '.'
                targets 'all'

                inputs.file 'CMakeLists.txt'
                
                workingDir 'build'
                
                environment = [
                        'PATH': toolChainPath
                ]
            }
        }
    }
}

compileJava.dependsOn "detectorJNISharedLibrary"

jar {
    doFirst {
        println "\nCMake output:"
        new File('build/tmp/externalBuildDetectorJNISharedLibrary/cmake-output.txt').eachLine { line ->
            println line
        }

        println "\nMake output:"
        new File('build/tmp/externalBuildDetectorJNISharedLibrary/makeAll-output.txt').eachLine { line ->
            println line
        }
    }

    from('build/libs/') {
        include 'libdetectorJNI.so'
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

wrapper {
    gradleVersion = "4.10.3"
}

buildConfig {
    def gitVersion = versionDetails()

    appName = project.name
    version = project.version

    clsName = 'BuildConfig'
    packageName = 'de.hhu.bsinfo.jdetector.generated'

    charset = 'UTF-8'

    buildConfigField 'String', 'BUILD_DATE', new Date().format('yyyy-MM-dd HH:mm:ss')
    buildConfigField 'String', 'GIT_COMMIT', gitVersion.gitHash
    buildConfigField 'String', 'GIT_BRANCH', gitVersion.branchName
}

apply from: 'publish.gradle'
apply from: 'bintray.gradle'
apply from: 'artifactory.gradle'
